#!/usr/bin/env bash

: "${ircdir:=$HOME/ircbot}"
: "${nickname:=archlog}"

declare -A networks=(
[irc.freenode.net]="#archlinux.it"
)

# some privacy please, thanks
chmod 700 "$ircdir"
chmod 600 "$ircdir"/*/ident &>/dev/null

monitor() {
  tailf -n1 "$ircdir/$network/$channel/out" | \
    while read -r date time nick msg; do
      # if msg is by the system ignore it
      [[ "$nick" == '-!-' ]] && continue
      # strip < and >. if msg is by ourself ignore it
      nick="${nick:1:-1}"
      [[ "$nick" == "$nickname" ]] && continue

      # if msg is a command, invoke iicmd
      [[ "${msg:0:1}" == "." ]] && \
        exec $HOME/iibot/iicmd "$nick" "${msg:1}" "$ircdir" "$network" "$channel" "$nickname" | fold -w 255 &
    done > "$ircdir/$network/$channel/in"
  }

  for network in "${!networks[@]}"; do
    while true; do
      # cleanup
      rm -f "$ircdir/$network/in"

      # connect to netwrok - password is set through the env var IIPASS
      ii -i "$ircdir" -n $nickname -s "$network" &
      pid="$!"

      # wait for the connection
      while ! test -p "$ircdir/$network/in"; do sleep 1; done

      # auth to services
      [[ -e "$ircdir/$network/ident" ]] && \
        printf -- "/j nickserv identify %s\n" "$(<"$ircdir/$network/ident")" > "$ircdir/$network/in"
      rm -f "$ircdir/$network/nickserv/out" # clean that up - ident passwd is in there

      # join channels
      for channel in ${networks[$network]}; do
        printf -- "/j %s\n" "$channel" > "$ircdir/$network/in"
        [[ -e "$ircdir/$network/$channel/out" ]] || touch "$ircdir/$network/$channel/out"
        monitor &
        pids+=($!)
      done

      # if connection is lost reconnect
      wait "$pid"
      kill "${pids[@]}"
    done &
  done

